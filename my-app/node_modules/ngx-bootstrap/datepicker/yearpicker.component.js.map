{"version":3,"file":"yearpicker.component.js","sourceRoot":"","sources":["../../.tmp/datepicker/yearpicker.component.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAElD,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;;IAsDtE,6BAAY,UAAoC;oBAFlC,EAAE;QAGd,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAED,sBAAI,sCAAK;aAAT;YACE,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;SACjB;;;OAAA;IAED,sCAAQ,GAAR;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;QAEhE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACpC,IAAM,KAAK,GAAU,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,IAAU,CAAC;YACf,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;YAElE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;gBACxC,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACjC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC9B,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxD,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;aACxC;YAED,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CACjE,KAAK,CACN,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAC7D,EAAE,MAAM,CAAC,CAAC;QAEX,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAChC,KAAW,EACX,KAAW;YAEX,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;SAClD,EAAE,MAAM,CAAC,CAAC;QAEX,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;KAC/B;IAES,6CAAe,GAAzB,UAA0B,IAAY;;QAEpC,MAAM,CAAC,CACL,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CACvE,CAAC;KACH;;gBAlGF,SAAS,SAAC;oBACT,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,w1DAoCT;oBACD,MAAM,EAAE;wBACN,iFAID;qBACA;iBACF;;;;gBAhDQ,wBAAwB;;8BALjC;;SAsDa,mBAAmB","sourcesContent":["// @deprecated\n// tslint:disable\nimport { Component, OnInit } from '@angular/core';\n\nimport { isBs3 } from '../utils/theme-provider';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\n\n@Component({\n  selector: 'yearpicker',\n  template: `\n<table *ngIf=\"datePicker.datepickerMode==='year'\" role=\"grid\">\n  <thead>\n    <tr>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-left float-left\"\n                (click)=\"datePicker.move(-1)\" tabindex=\"-1\">‹</button>\n      </th>\n      <th [attr.colspan]=\"((datePicker.yearColLimit - 2) <= 0) ? 1 : datePicker.yearColLimit - 2\">\n        <button [id]=\"datePicker.uniqueId + '-title'\" role=\"heading\"\n                type=\"button\" class=\"btn btn-default btn-sm\"\n                (click)=\"datePicker.toggleMode(0)\"\n                [disabled]=\"datePicker.datepickerMode === datePicker.maxMode\"\n                [ngClass]=\"{disabled: datePicker.datepickerMode === datePicker.maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\n          <strong>{{ title }}</strong>\n        </button>\n      </th>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-right float-right\"\n                (click)=\"datePicker.move(1)\" tabindex=\"-1\">›</button>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let rowz of rows\">\n      <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\" [attr.id]=\"dtz.uid\">\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-link': isBs4 && !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected || (isBs4 && !dtz.selected && datePicker.isActive(dtz)), disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz)}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n          <span [ngClass]=\"{'text-success': isBs4 && dtz.current, 'text-info': !isBs4 && dtz.current}\">{{ dtz.label }}</span>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  `,\n  styles: [\n    `\n    :host .btn-info .text-success {\n      color: #fff !important;\n    }\n  `\n  ]\n})\nexport class YearPickerComponent implements OnInit {\n  datePicker: DatePickerInnerComponent;\n  title: string;\n  rows: any[] = [];\n\n  constructor(datePicker: DatePickerInnerComponent) {\n    this.datePicker = datePicker;\n  }\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  ngOnInit(): void {\n    const self = this;\n\n    this.datePicker.stepYear = { years: this.datePicker.yearRange };\n\n    this.datePicker.setRefreshViewHandler(function(): void {\n      const years: any[] = new Array(this.yearRange);\n      let date: Date;\n      const start = self.getStartingYear(this.activeDate.getFullYear());\n\n      for (let i = 0; i < this.yearRange; i++) {\n        date = new Date(start + i, 0, 1);\n        date = this.fixTimeZone(date);\n        years[i] = this.createDateObject(date, this.formatYear);\n        years[i].uid = this.uniqueId + '-' + i;\n      }\n\n      self.title = [years[0].label, years[this.yearRange - 1].label].join(\n        ' - '\n      );\n      self.rows = this.split(years, self.datePicker.yearColLimit);\n    }, 'year');\n\n    this.datePicker.setCompareHandler(function(\n      date1: Date,\n      date2: Date\n    ): number {\n      return date1.getFullYear() - date2.getFullYear();\n    }, 'year');\n\n    this.datePicker.refreshView();\n  }\n\n  protected getStartingYear(year: number): number {\n    // todo: parseInt\n    return (\n      (year - 1) / this.datePicker.yearRange * this.datePicker.yearRange + 1\n    );\n  }\n}\n"]}