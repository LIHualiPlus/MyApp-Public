{"version":3,"file":"bs-daterangepicker-input.directive.js","sourceRoot":"","sources":["../../.tmp/datepicker/bs-daterangepicker-input.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectorRef, Directive, ElementRef, forwardRef, Host, Renderer2 } from '@angular/core';\nimport {\n  AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors,\n  Validator\n} from '@angular/forms';\nimport { parseDate } from '../chronos/create/local';\nimport { formatDate } from '../chronos/format';\nimport { getLocale } from '../chronos/locale/locales';\nimport { isAfter, isBefore } from '../chronos/utils/date-compare';\nimport { isArray, isDateValid } from '../chronos/utils/type-checks';\nimport { BsDatepickerConfig } from './bs-datepicker.config';\nimport { BsDaterangepickerDirective } from './bs-daterangepicker.component';\nimport { BsLocaleService } from './bs-locale.service';\n\nconst BS_DATERANGEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line\n  useExisting: forwardRef(() => BsDaterangepickerInputDirective),\n  multi: true\n};\n\n\nconst BS_DATERANGEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BsDaterangepickerInputDirective),\n  multi: true\n};\n\n\n@Directive({\n  selector: `input[bsDaterangepicker]`,\n  host: {\n    '(change)': 'onChange($event)',\n    '(keyup.esc)': 'hide()',\n    '(blur)': 'onBlur()'\n  },\n  providers: [BS_DATERANGEPICKER_VALUE_ACCESSOR, BS_DATERANGEPICKER_VALIDATOR]\n})\nexport class BsDaterangepickerInputDirective\n  implements ControlValueAccessor, Validator {\n  private _onChange = Function.prototype;\n  private _onTouched = Function.prototype;\n  private _validatorChange = Function.prototype;\n  private _value: Date[];\n\n  constructor(@Host() private _picker: BsDaterangepickerDirective,\n              private _localeService: BsLocaleService,\n              private _renderer: Renderer2,\n              private _elRef: ElementRef,\n              private changeDetection: ChangeDetectorRef) {\n    // update input value on datepicker value update\n    this._picker.bsValueChange.subscribe((value: Date[]) => {\n      this._setInputValue(value);\n      if (this._value !== value) {\n        this._value = value;\n        this._onChange(value);\n        this._onTouched();\n      }\n      this.changeDetection.markForCheck();\n    });\n\n    // update input value on locale change\n    this._localeService.localeChange.subscribe(() => {\n      this._setInputValue(this._value);\n    });\n  }\n\n  _setInputValue(date: Date[]): void {\n    let range = '';\n    if (date) {\n      const start = !date[0] ? ''\n        : formatDate(date[0],\n          this._picker._config.rangeInputFormat,\n          this._localeService.currentLocale\n        );\n      const end = !date[1] ? ''\n        : formatDate(\n          date[1],\n          this._picker._config.rangeInputFormat,\n          this._localeService.currentLocale\n        );\n      range = (start && end) ? start + this._picker._config.rangeSeparator + end : '';\n    }\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', range);\n  }\n\n  onChange(event: any) {\n    this.writeValue(event.target.value);\n    this._onChange(this._value);\n    this._onTouched();\n  }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const _value: [Date, Date] = c.value;\n\n    if (_value === null || _value === undefined || !isArray(_value)) {\n      return null;\n    }\n\n\n    const _isDateValid = isDateValid(_value[0]) && isDateValid(_value[0]);\n\n    if (!_isDateValid) {\n      return { bsDate: { invalid: _value } };\n    }\n\n    if (this._picker && this._picker.minDate && isBefore(_value[0], this._picker.minDate, 'date')) {\n      return { bsDate: { minDate: this._picker.minDate } };\n    }\n\n    if (this._picker && this._picker.maxDate && isAfter(_value[1], this._picker.maxDate, 'date')) {\n      return { bsDate: { maxDate: this._picker.maxDate } };\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorChange = fn;\n  }\n\n  writeValue(value: Date[] | string) {\n    if (!value) {\n      this._value = null;\n    } else {\n      const _localeKey = this._localeService.currentLocale;\n      const _locale = getLocale(_localeKey);\n      if (!_locale) {\n        throw new Error(\n          `Locale \"${_localeKey}\" is not defined, please add it with \"defineLocale(...)\"`\n        );\n      }\n\n      let _input: (string[] | Date[]) = [];\n      if (typeof value === 'string') {\n        _input = value.split(this._picker._config.rangeSeparator);\n      }\n\n      if (Array.isArray(value)) {\n        _input = value;\n      }\n\n\n      this._value = (_input as string[])\n        .map((_val: string): Date =>\n          parseDate(_val, this._picker._config.dateInputFormat, this._localeService.currentLocale))\n        .map((date: Date) => (isNaN(date.valueOf()) ? null : date));\n    }\n\n    this._picker.bsValue = this._value;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._picker.isDisabled = isDisabled;\n    if (isDisabled) {\n      this._renderer.setAttribute(this._elRef.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this._renderer.removeAttribute(this._elRef.nativeElement, 'disabled');\n  }\n\n  registerOnChange(fn: (value: any) => any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this._onTouched = fn;\n  }\n\n  onBlur() {\n    this._onTouched();\n  }\n\n  hide() {\n    this._picker.hide();\n  }\n}\n"]}