{"version":3,"file":"timezone.js","sourceRoot":"","sources":["../../../.tmp/chronos/units/timezone.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;;;AAMlD,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAC5B,UAAU,IAAU,EAAE,IAA0B;IAC9C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;CAChC,CAAC,CAAC;AACL,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAC7B,UAAU,IAAU,EAAE,IAA0B;IAC9C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC;CACvD,CAAC,CAAC;;AAIL,MAAM,sBAAsB,KAAc;IACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;CAC3B;AAED,MAAM,sBAAsB,KAAc;IACxC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC,EAAE,CAAC;CAClD","sourcesContent":["import { addFormatToken } from '../format/format';\nimport { DateFormatterOptions } from '../types';\n\n// todo: add support for timezones\n\n// FORMATTING\naddFormatToken('z', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.isUTC ? 'UTC' : '';\n  });\naddFormatToken('zz', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n\n// MOMENTS\n\nexport function getZoneAbbr(isUTC: boolean) {\n  return isUTC ? 'UTC' : '';\n}\n\nexport function getZoneName(isUTC: boolean) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n"]}