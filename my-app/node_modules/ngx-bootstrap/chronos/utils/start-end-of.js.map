{"version":3,"file":"start-end-of.js","sourceRoot":"","sources":["../../../.tmp/chronos/utils/start-end-of.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,OAAO,EAAe,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAElF,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAC;AAC1C,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAEvD,MAAM,kBAAkB,IAAU,EAAE,IAAgB,EAAE,KAAe;IACnE,IAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;;;IAG9B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACb,KAAK,MAAM;YACT,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;QAE5B,KAAK,SAAS,CAAC;QACf,KAAK,OAAO;YACV,OAAO,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;QAE3B,KAAK,MAAM,CAAC;QACZ,KAAK,SAAS,CAAC;QACf,KAAK,KAAK,CAAC;QACX,KAAK,MAAM;YACT,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;QAE5B,KAAK,OAAO;YACV,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;QAE9B,KAAK,SAAS;YACZ,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;QAE9B,KAAK,SAAS;YACZ,eAAe,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;KACpC;;IAGD,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;QACpB,kBAAkB,CAAC,KAAK,EAAE,CAAC,EAAE,EAAC,KAAK,OAAA,EAAC,CAAC,CAAC;KACvC;IACD,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;QACvB,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAC3B;;IAGD,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;KACpE;IAED,MAAM,CAAC,KAAK,CAAC;CACd;AAED,MAAM,gBAAgB,IAAU,EAAE,IAAgB,EAAE,KAAe;IACjE,IAAI,KAAK,GAAG,IAAI,CAAC;;IAEjB,EAAE,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;QACrB,KAAK,GAAG,KAAK,CAAC;KACf;IAED,IAAM,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1C,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACzE,IAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;IAEtD,MAAM,CAAC,GAAG,CAAC;CACZ","sourcesContent":["// tslint:disable: switch-default\nimport { TimeUnit, UnitOfTime } from '../types';\nimport {\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\n  shiftDate\n} from './date-setters';\nimport { cloneDate } from '../create/clone';\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getMonth } from './date-getters';\nimport { add, subtract } from '../moment/add-subtract';\n\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {isUTC});\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n\n  return res;\n}\n"]}