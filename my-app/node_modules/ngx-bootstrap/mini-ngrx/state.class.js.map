{"version":3,"file":"state.class.js","sourceRoot":"","sources":["../../.tmp/mini-ngrx/state.class.ts"],"names":[],"mappings":";;;;;;;;;;AAIA,OAAO,EAAE,eAAe,EAAc,cAAc,EAAE,MAAM,MAAM,CAAC;AACnE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AAGjD,IAAA;IAAkC,6BAAkB;IAClD,mBACE,aAAgB,EAChB,kBAAsC,EACtC,OAAyB;QAH3B,YAKE,kBAAM,aAAa,CAAC,SAiBrB;QAfC,IAAM,cAAc,GAAG,kBAAkB,CAAC,IAAI,CAC5C,SAAS,CAAC,cAAc,CAAC,CAC1B,CAAC;QACF,IAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAChC,IAAI,CAAC,UAAC,KAAQ,EAAE,MAAc;YAC5B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,KAAK,CAAC;aACd;YAED,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;SAC/B,EACD,aAAa,CACd,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,UAAC,KAAQ,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAhB,CAAgB,CAAC,CAAC;;KAClD;oBA/BH;EAQkC,eAAe,EAwBhD,CAAA;AAxBD,qBAwBC","sourcesContent":["/**\n * @copyright ngrx\n */\nimport { Action, ActionReducer } from './index';\nimport { BehaviorSubject, Observable, queueScheduler } from 'rxjs';\nimport { observeOn, scan } from 'rxjs/operators';\n\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = actionsDispatcher$.pipe(\n      observeOn(queueScheduler)\n    );\n    const state$ = actionInQueue$.pipe(\n      scan((state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    ));\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n"]}